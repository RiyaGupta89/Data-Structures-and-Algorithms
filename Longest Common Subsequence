class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        HashMap<String,Integer> memo=new HashMap<String,Integer>();
        return lcs(text1,text2,0,0,memo);
    }
    private int lcs(String s1,String s2, int i, int j,HashMap<String,Integer> memo){
        if(i>s1.length()-1||j>s2.length()-1){
            return 0;
        }
        
        String currentKey=i+"_"+j;
        
        if(memo.containsKey(currentKey)){
            return memo.get(currentKey);
        }
        
        int ans=0;
        if(s1.charAt(i)==s2.charAt(j)){
            ans=1+lcs(s1,s2,i+1,j+1,memo);
        } else {
            ans=Math.max(lcs(s1,s2,i,j+1,memo),lcs(s1,s2,i+1,j,memo));
        }
        memo.put(currentKey,ans);
        return ans;
        
    }
}
